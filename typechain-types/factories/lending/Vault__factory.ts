/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../../lending/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "master_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdi_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_baseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_masterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claim_erc20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "decrease_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit_erc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "increase_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw_erc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200141638038062001416833981810160405281019062000037919062000232565b8360008190555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620002a4565b600080fd5b6000819050919050565b620001a78162000192565b8114620001b357600080fd5b50565b600081519050620001c7816200019c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fa82620001cd565b9050919050565b6200020c81620001ed565b81146200021857600080fd5b50565b6000815190506200022c8162000201565b92915050565b600080600080608085870312156200024f576200024e6200018d565b5b60006200025f87828801620001b6565b945050602062000272878288016200021b565b935050604062000285878288016200021b565b925050606062000298878288016200021b565b91505092959194509250565b61116280620002b46000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063c84aae1711610071578063c84aae171461017c578063d16544f0146101ac578063da7eeea5146101c8578063dafb27b6146101f8578063f366751714610228578063fe84d0ae14610246576100b3565b80629fd1d6146100b857806305180237146100d657806324a5af31146100f4578063578ec33f1461011057806359962b651461012e5780636075851e1461015e575b600080fd5b6100c0610264565b6040516100cd9190610c5c565b60405180910390f35b6100de61026e565b6040516100eb9190610c5c565b60405180910390f35b61010e60048036038101906101099190610d06565b610274565b005b610118610569565b6040516101259190610d55565b60405180910390f35b61014860048036038101906101439190610d06565b61058f565b6040516101559190610c5c565b60405180910390f35b610166610900565b6040516101739190610d55565b60405180910390f35b61019660048036038101906101919190610d70565b610926565b6040516101a39190610c5c565b60405180910390f35b6101c660048036038101906101c19190610d06565b61096f565b005b6101e260048036038101906101dd9190610d9d565b610ada565b6040516101ef9190610c5c565b60405180910390f35b610212600480360381019061020d9190610d9d565b610b54565b60405161021f9190610c5c565b60405180910390f35b610230610c13565b60405161023d9190610d55565b60405180910390f35b61024e610c3d565b60405161025b9190610c5c565b60405180910390f35b6000600754905090565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ce57600080fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690610e4d565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b815260040161039193929190610e6d565b602060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190610edc565b5081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461042f9190610f38565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b7482646000546040518263ffffffff1660e01b81526004016104d19190610c5c565b60206040518083038186803b1580156104e957600080fd5b505afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105219190610edc565b905080610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a90610fde565b60405180910390fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105eb57600080fd5b600083905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610780578073ffffffffffffffffffffffffffffffffffffffff166323b872dd30600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b815260040161069693929190610e6d565b602060405180830381600087803b1580156106b057600080fd5b505af11580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610edc565b5082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107349190610f38565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550829150506108fa565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd30600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b815260040161081e93929190610e6d565b602060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190610edc565b506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150505b92915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081116109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a99061104a565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109f493929190610e6d565b602060405180830381600087803b158015610a0e57600080fd5b505af1158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190610edc565b5081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a92919061106a565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3657600080fd5b81600754610b44919061106a565b6007819055506007549050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb057600080fd5b816007541015610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec9061110c565b60405180910390fd5b81600754610c039190610f38565b6007819055506007549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000819050919050565b610c5681610c43565b82525050565b6000602082019050610c716000830184610c4d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ca782610c7c565b9050919050565b610cb781610c9c565b8114610cc257600080fd5b50565b600081359050610cd481610cae565b92915050565b610ce381610c43565b8114610cee57600080fd5b50565b600081359050610d0081610cda565b92915050565b60008060408385031215610d1d57610d1c610c77565b5b6000610d2b85828601610cc5565b9250506020610d3c85828601610cf1565b9150509250929050565b610d4f81610c9c565b82525050565b6000602082019050610d6a6000830184610d46565b92915050565b600060208284031215610d8657610d85610c77565b5b6000610d9484828501610cc5565b91505092915050565b600060208284031215610db357610db2610c77565b5b6000610dc184828501610cf1565b91505092915050565b600082825260208201905092915050565b7f63616e6e6f74207769746864726177206d6f7265207468616e20796f75206f7760008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e37602183610dca565b9150610e4282610ddb565b604082019050919050565b60006020820190508181036000830152610e6681610e2a565b9050919050565b6000606082019050610e826000830186610d46565b610e8f6020830185610d46565b610e9c6040830184610c4d565b949350505050565b60008115159050919050565b610eb981610ea4565b8114610ec457600080fd5b50565b600081519050610ed681610eb0565b92915050565b600060208284031215610ef257610ef1610c77565b5b6000610f0084828501610ec7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4382610c43565b9150610f4e83610c43565b925082821015610f6157610f60610f09565b5b828203905092915050565b7f7468697320776974686472617720776f756c64206d616b6520796f757220616360008201527f636f756e7420696e736f6c76656e740000000000000000000000000000000000602082015250565b6000610fc8602f83610dca565b9150610fd382610f6c565b604082019050919050565b60006020820190508181036000830152610ff781610fbb565b9050919050565b7f63616e6e6f74206465706f736974203000000000000000000000000000000000600082015250565b6000611034601083610dca565b915061103f82610ffe565b602082019050919050565b6000602082019050818103600083015261106381611027565b9050919050565b600061107582610c43565b915061108083610c43565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110b5576110b4610f09565b5b828201905092915050565b7f63616e6e6f74207265706179206d6f7265207468616e206973206f7765640000600082015250565b60006110f6601e83610dca565b9150611101826110c0565b602082019050919050565b60006020820190508181036000830152611125816110e9565b905091905056fea2646970667358221220fe6aa611d49b3b185b27107ae7604226c0129f37676cfd3d6f8e4314cb2ca9f264736f6c63430008090033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
