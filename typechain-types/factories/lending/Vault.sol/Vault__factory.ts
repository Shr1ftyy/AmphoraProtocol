/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../../../lending/Vault.sol/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "master_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdi_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BaseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_VaultControllerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_baseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "decrease_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "compLikeDelegatee",
        type: "address",
      },
      {
        internalType: "address",
        name: "CompLikeToken",
        type: "address",
      },
    ],
    name: "delegateCompLikeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "increase_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "masterTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109b43803806109b483398101604081905261002f916100a9565b600093909355600180546001600160a01b039384166001600160a01b031991821617909155600280549484169482168517905560038054821690941790935560048054919092169083168117909155600580549092161790556100f6565b80516001600160a01b03811681146100a457600080fd5b919050565b600080600080608085870312156100bf57600080fd5b845193506100cf6020860161008d565b92506100dd6040860161008d565b91506100eb6060860161008d565b905092959194509250565b6108af806101056000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bd1f4b5211610071578063bd1f4b5214610148578063da7eeea51461015b578063dafb27b61461016e578063e817957714610181578063eedc966a14610189578063fe84d0ae1461019c57600080fd5b806305180237146100b95780631c9c7903146100d55780632f10b47a146100ea5780634de7a8b8146100fd578063578ec33f146101225780639c9ee2bb14610135575b600080fd5b6100c260005481565b6040519081526020015b60405180910390f35b6100e86100e33660046106ee565b6101a5565b005b6100e86100f836600461072a565b6102ba565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100cc565b60015461010a906001600160a01b031681565b60045461010a906001600160a01b031681565b6100e861015636600461075d565b610370565b6100c2610169366004610787565b610570565b6100c261017c366004610787565b6105c1565b6006546100c2565b6100c26101973660046107a0565b610657565b6100c260065481565b6004546001600160a01b0316336001600160a01b0316146101e15760405162461bcd60e51b81526004016101d8906107c2565b60405180910390fd5b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026991906107f9565b6102b55760405162461bcd60e51b815260206004820152601f60248201527f6d61737465725472616e736665723a205472616e73666572204661696c65640060448201526064016101d8565b505050565b6001546001600160a01b0316336001600160a01b0316146103115760405162461bcd60e51b815260206004820152601160248201527039b2b73232b9103737ba1036b4b73a32b960791b60448201526064016101d8565b6040516317066a5760e21b81526001600160a01b038381166004830152821690635c19a95c90602401600060405180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b505050505050565b6001546001600160a01b0316336001600160a01b0316146103c75760405162461bcd60e51b815260206004820152601160248201527039b2b73232b9103737ba1036b4b73a32b960791b60448201526064016101d8565b816001600160a01b0381166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906107f9565b50600554600080546040516303db07d160e11b815291926001600160a01b0316916307b60fa2916104979160040190815260200190565b60206040518083038186803b1580156104af57600080fd5b505afa1580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e791906107f9565b9050806105285760405162461bcd60e51b815260206004820152600f60248201526e1bdd995c8b5dda5d1a191c985dd85b608a1b60448201526064016101d8565b604080516001600160a01b0386168152602081018590527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150505050565b6004546000906001600160a01b0316336001600160a01b0316146105a65760405162461bcd60e51b81526004016101d8906107c2565b816006546105b49190610831565b600681905590505b919050565b6004546000906001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b81526004016101d8906107c2565b8160065410156106495760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74207265706179206d6f7265207468616e206973206f776564000060448201526064016101d8565b816006546105b49190610849565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561069957600080fd5b505afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190610860565b92915050565b80356001600160a01b03811681146105bc57600080fd5b60008060006060848603121561070357600080fd5b61070c846106d7565b925061071a602085016106d7565b9150604084013590509250925092565b6000806040838503121561073d57600080fd5b610746836106d7565b9150610754602084016106d7565b90509250929050565b6000806040838503121561077057600080fd5b610779836106d7565b946020939093013593505050565b60006020828403121561079957600080fd5b5035919050565b6000602082840312156107b257600080fd5b6107bb826106d7565b9392505050565b6020808252601a908201527f73656e646572206e6f74205661756c74436f6e74726f6c6c6572000000000000604082015260600190565b60006020828403121561080b57600080fd5b815180151581146107bb57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156108445761084461081b565b500190565b60008282101561085b5761085b61081b565b500390565b60006020828403121561087257600080fd5b505191905056fea2646970667358221220952fe023e19e4d7682be07b721b403bd409e66a9ed8b6f273a15921f1255eddb64736f6c63430008090033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
