/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../../../lending/Vault.sol/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "master_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdi_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BaseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_baseLiability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_masterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "decrease_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "compLikeDelegatee",
        type: "address",
      },
      {
        internalType: "address",
        name: "CompLikeToken",
        type: "address",
      },
    ],
    name: "delegateCompLikeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base_amount",
        type: "uint256",
      },
    ],
    name: "increase_liability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "masterTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw_erc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108fc3803806108fc83398101604081905261002f916100a9565b600093909355600180546001600160a01b039384166001600160a01b031991821617909155600280549484169482168517905560038054821690941790935560048054919092169083168117909155600580549092161790556100f6565b80516001600160a01b03811681146100a457600080fd5b919050565b600080600080608085870312156100bf57600080fd5b845193506100cf6020860161008d565b92506100dd6040860161008d565b91506100eb6060860161008d565b905092959194509250565b6107f7806101056000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c84aae1711610071578063c84aae171461014e578063da7eeea514610161578063dafb27b614610174578063e817957714610187578063f36675171461018f578063fe84d0ae146101a057600080fd5b806305180237146100b95780631c9c7903146100d557806324a5af31146100ea5780632f10b47a146100fd578063578ec33f146101105780636075851e1461013b575b600080fd5b6100c260005481565b6040519081526020015b60405180910390f35b6100e86100e336600461066d565b6101a9565b005b6100e86100f83660046106a9565b6102a7565b6100e861010b3660046106d3565b610496565b600154610123906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b600454610123906001600160a01b031681565b6100c261015c366004610706565b610515565b6100c261016f366004610728565b610595565b6100c2610182366004610728565b6105d3565b6006546100c2565b6001546001600160a01b0316610123565b6100c260065481565b6004546001600160a01b0316336001600160a01b0316146101c957600080fd5b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390528416906323b872dd90606401602060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190610741565b6102a25760405162461bcd60e51b815260206004820152601f60248201527f6d61737465725472616e736665723a205472616e73666572204661696c65640060448201526064015b60405180910390fd5b505050565b6001546001600160a01b0316336001600160a01b0316146102c757600080fd5b816001600160a01b0381166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610741565b50600554600080546040516322dd209960e21b815291926001600160a01b031691638b748264916103979160040190815260200190565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e79190610741565b90508061044e5760405162461bcd60e51b815260206004820152602f60248201527f7468697320776974686472617720776f756c64206d616b6520796f757220616360448201526e18dbdd5b9d081a5b9cdbdb1d995b9d608a1b6064820152608401610299565b604080516001600160a01b0386168152602081018590527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150505050565b6001546001600160a01b0316336001600160a01b0316146104b657600080fd5b6040516317066a5760e21b81526001600160a01b038381166004830152821690635c19a95c90602401600060405180830381600087803b1580156104f957600080fd5b505af115801561050d573d6000803e3d6000fd5b505050505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561055757600080fd5b505afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610763565b92915050565b6004546000906001600160a01b0316336001600160a01b0316146105b857600080fd5b816006546105c69190610792565b600681905590505b919050565b6004546000906001600160a01b0316336001600160a01b0316146105f657600080fd5b8160065410156106485760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f74207265706179206d6f7265207468616e206973206f77656400006044820152606401610299565b816006546105c691906107aa565b80356001600160a01b03811681146105ce57600080fd5b60008060006060848603121561068257600080fd5b61068b84610656565b925061069960208501610656565b9150604084013590509250925092565b600080604083850312156106bc57600080fd5b6106c583610656565b946020939093013593505050565b600080604083850312156106e657600080fd5b6106ef83610656565b91506106fd60208401610656565b90509250929050565b60006020828403121561071857600080fd5b61072182610656565b9392505050565b60006020828403121561073a57600080fd5b5035919050565b60006020828403121561075357600080fd5b8151801515811461072157600080fd5b60006020828403121561077557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156107a5576107a561077c565b500190565b6000828210156107bc576107bc61077c565b50039056fea2646970667358221220f87e50f9d51313fd515f873e8f5b18f9f63feea1717fbb0eb58ba389cd577d4764736f6c63430008090033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    ) as Promise<Vault>;
  }
  override getDeployTransaction(
    id: BigNumberish,
    minter: string,
    master_address: string,
    usdi_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id,
      minter,
      master_address,
      usdi_address,
      overrides || {}
    );
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
