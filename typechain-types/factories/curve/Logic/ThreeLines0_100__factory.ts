/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ThreeLines0_100,
  ThreeLines0_100Interface,
} from "../../../curve/Logic/ThreeLines0_100";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "r0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "r1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "r2",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "r3",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "s0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "s1",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_r0",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_r1",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_r2",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_r3",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_s0",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_s1",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "rise",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "run",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "distance",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "linearInterpolation",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x_value",
        type: "int256",
      },
    ],
    name: "valueAt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109fc3803806109fc833981810160405281019061003291906100a2565b85600081905550846001819055508360028190555082600381905550816004819055508060058190555050505050505061012f565b600080fd5b6000819050919050565b61007f8161006c565b811461008a57600080fd5b50565b60008151905061009c81610076565b92915050565b60008060008060008060c087890312156100bf576100be610067565b5b60006100cd89828a0161008d565b96505060206100de89828a0161008d565b95505060406100ef89828a0161008d565b945050606061010089828a0161008d565b935050608061011189828a0161008d565b92505060a061012289828a0161008d565b9150509295509295509295565b6108be8061013e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063825d3c4a1161005b578063825d3c4a1461011757806385bcfbd8146101355780639d830ef814610165578063ecf62e7e1461018357610088565b8063414be42b1461008d57806347ba7b21146100bd5780637785b716146100db57806378a8ad5e146100f9575b600080fd5b6100a760048036038101906100a291906103da565b6101a1565b6040516100b49190610416565b60405180910390f35b6100c5610326565b6040516100d29190610416565b60405180910390f35b6100e361032c565b6040516100f09190610416565b60405180910390f35b610101610332565b60405161010e9190610416565b60405180910390f35b61011f610338565b60405161012c9190610416565b60405180910390f35b61014f600480360381019061014a9190610431565b61033e565b60405161015c9190610416565b60405180910390f35b61016d610393565b60405161017a9190610416565b60405180910390f35b61018b610399565b6040516101989190610416565b60405180910390f35b60008068056bc75e2d631000009050600083136101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea906104f5565b60405180910390fd5b80831315610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d90610561565b60405180910390fd5b60045483121561027357600060015460005461025291906105b0565b90506000600454905061026982828760005461033e565b9350505050610321565b6005548312156102ca57600060025460015461028f91906105b0565b905060006004546005546102a391906105b0565b90506102c08282600454886102b891906105b0565b60015461033e565b9350505050610321565b80831361031c5760006002546003546102e391906105b0565b90506000600554836102f591906105b0565b905061031282826005548861030a91906105b0565b60025461033e565b9350505050610321565b600080fd5b919050565b60005481565b60025481565b60045481565b60015481565b60008084620f4240876103519190610644565b61035b919061078a565b9050600083620f424086846103709190610644565b61037a919061078a565b61038491906107f4565b90508092505050949350505050565b60055481565b60035481565b600080fd5b6000819050919050565b6103b7816103a4565b81146103c257600080fd5b50565b6000813590506103d4816103ae565b92915050565b6000602082840312156103f0576103ef61039f565b5b60006103fe848285016103c5565b91505092915050565b610410816103a4565b82525050565b600060208201905061042b6000830184610407565b92915050565b6000806000806080858703121561044b5761044a61039f565b5b6000610459878288016103c5565b945050602061046a878288016103c5565b935050604061047b878288016103c5565b925050606061048c878288016103c5565b91505092959194509250565b600082825260208201905092915050565b7f746f6f20736d616c6c0000000000000000000000000000000000000000000000600082015250565b60006104df600983610498565b91506104ea826104a9565b602082019050919050565b6000602082019050818103600083015261050e816104d2565b9050919050565b7f746f6f206c617267650000000000000000000000000000000000000000000000600082015250565b600061054b600983610498565b915061055682610515565b602082019050919050565b6000602082019050818103600083015261057a8161053e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105bb826103a4565b91506105c6836103a4565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561060157610600610581565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561063957610638610581565b5b828203905092915050565b600061064f826103a4565b915061065a836103a4565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561069957610698610581565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156106d6576106d5610581565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561071357610712610581565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156107505761074f610581565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610795826103a4565b91506107a0836103a4565b9250826107b0576107af61075b565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156107e9576107e8610581565b5b828205905092915050565b60006107ff826103a4565b915061080a836103a4565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561084557610844610581565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561087d5761087c610581565b5b82820190509291505056fea2646970667358221220ea5dbe6e5b69ab0d287d3def32ee60df1cb6e11f032a670839d2723ce7eab10d64736f6c63430008090033";

type ThreeLines0_100ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThreeLines0_100ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThreeLines0_100__factory extends ContractFactory {
  constructor(...args: ThreeLines0_100ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    r0: BigNumberish,
    r1: BigNumberish,
    r2: BigNumberish,
    r3: BigNumberish,
    s0: BigNumberish,
    s1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ThreeLines0_100> {
    return super.deploy(
      r0,
      r1,
      r2,
      r3,
      s0,
      s1,
      overrides || {}
    ) as Promise<ThreeLines0_100>;
  }
  override getDeployTransaction(
    r0: BigNumberish,
    r1: BigNumberish,
    r2: BigNumberish,
    r3: BigNumberish,
    s0: BigNumberish,
    s1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(r0, r1, r2, r3, s0, s1, overrides || {});
  }
  override attach(address: string): ThreeLines0_100 {
    return super.attach(address) as ThreeLines0_100;
  }
  override connect(signer: Signer): ThreeLines0_100__factory {
    return super.connect(signer) as ThreeLines0_100__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThreeLines0_100Interface {
    return new utils.Interface(_abi) as ThreeLines0_100Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThreeLines0_100 {
    return new Contract(address, _abi, signerOrProvider) as ThreeLines0_100;
  }
}
