/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveMaster,
  CurveMasterInterface,
} from "../../curve/CurveMaster";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_curves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curve_address",
        type: "address",
      },
      {
        internalType: "int256",
        name: "x_value",
        type: "int256",
      },
    ],
    name: "get_value_at",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "curve_address",
        type: "address",
      },
    ],
    name: "set_curve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610c73806100db6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146101125780637639404d1461011c5780638da5cb5b14610138578063f2fde38b146101565761007d565b80632977968714610082578063383336c0146100b257806366f94015146100e2575b600080fd5b61009c600480360381019061009791906108a7565b610172565b6040516100a991906108e3565b60405180910390f35b6100cc60048036038101906100c79190610934565b6101a5565b6040516100d99190610983565b60405180910390f35b6100fc60048036038101906100f791906108a7565b610412565b60405161010991906109b9565b60405180910390f35b61011a610432565b005b610136600480360381019061013191906109d4565b61056c565b005b61014061066a565b60405161014d91906108e3565b60405180910390f35b610170600480360381019061016b91906108a7565b610693565b005b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000801515600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023090610a71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610add565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663414be42b856040518263ffffffff1660e01b81526004016103a79190610983565b60206040518083038186803b1580156103bf57600080fd5b505afa1580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190610b12565b9050600081141561040757600080fd5b809250505092915050565b60026020528060005260406000206000915054906101000a900460ff1681565b61043a61083c565b73ffffffffffffffffffffffffffffffffffffffff1661045861066a565b73ffffffffffffffffffffffffffffffffffffffff16146104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a590610b8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61057461083c565b73ffffffffffffffffffffffffffffffffffffffff1661059261066a565b73ffffffffffffffffffffffffffffffffffffffff16146105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90610b8b565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61069b61083c565b73ffffffffffffffffffffffffffffffffffffffff166106b961066a565b73ffffffffffffffffffffffffffffffffffffffff161461070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690610b8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690610c1d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087482610849565b9050919050565b61088481610869565b811461088f57600080fd5b50565b6000813590506108a18161087b565b92915050565b6000602082840312156108bd576108bc610844565b5b60006108cb84828501610892565b91505092915050565b6108dd81610869565b82525050565b60006020820190506108f860008301846108d4565b92915050565b6000819050919050565b610911816108fe565b811461091c57600080fd5b50565b60008135905061092e81610908565b92915050565b6000806040838503121561094b5761094a610844565b5b600061095985828601610892565b925050602061096a8582860161091f565b9150509250929050565b61097d816108fe565b82525050565b60006020820190506109986000830184610974565b92915050565b60008115159050919050565b6109b38161099e565b82525050565b60006020820190506109ce60008301846109aa565b92915050565b600080604083850312156109eb576109ea610844565b5b60006109f985828601610892565b9250506020610a0a85828601610892565b9150509250929050565b600082825260208201905092915050565b7f6375727665207061757365640000000000000000000000000000000000000000600082015250565b6000610a5b600c83610a14565b9150610a6682610a25565b602082019050919050565b60006020820190508181036000830152610a8a81610a4e565b9050919050565b7f746f6b656e206e6f7420656e61626c6564000000000000000000000000000000600082015250565b6000610ac7601183610a14565b9150610ad282610a91565b602082019050919050565b60006020820190508181036000830152610af681610aba565b9050919050565b600081519050610b0c81610908565b92915050565b600060208284031215610b2857610b27610844565b5b6000610b3684828501610afd565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b75602083610a14565b9150610b8082610b3f565b602082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c07602683610a14565b9150610c1282610bab565b604082019050919050565b60006020820190508181036000830152610c3681610bfa565b905091905056fea2646970667358221220cf97d9cc483b22182b024a6f8d5bbef6eaaa42eab5c85042b7fa8617a9bd9f9b64736f6c63430008090033";

type CurveMasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveMasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveMaster__factory extends ContractFactory {
  constructor(...args: CurveMasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveMaster> {
    return super.deploy(overrides || {}) as Promise<CurveMaster>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurveMaster {
    return super.attach(address) as CurveMaster;
  }
  override connect(signer: Signer): CurveMaster__factory {
    return super.connect(signer) as CurveMaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveMasterInterface {
    return new utils.Interface(_abi) as CurveMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveMaster {
    return new Contract(address, _abi, signerOrProvider) as CurveMaster;
  }
}
