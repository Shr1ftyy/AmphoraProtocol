/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UFragments, UFragmentsInterface } from "../../token/UFragments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "monetaryPolicy",
        type: "address",
      },
    ],
    name: "LogMonetaryPolicyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "LogRebase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIP712_REVISION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "__ERC20Detailed_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "__UFragments_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_gonBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gonsPerFragment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalGons",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "monetaryPolicy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supplyAdd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supplyRemove",
        type: "uint256",
      },
    ],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "monetaryPolicy_",
        type: "address",
      },
    ],
    name: "setMonetaryPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferAllFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613637806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806384d4b4101161011a578063a48daa4f116100ad578063d505accf1161007c578063d505accf1461062f578063dd62ed3e1461064b578063e1b11da41461067b578063f2fde38b14610699578063fd5eb09d146106b557610206565b8063a48daa4f14610593578063a9059cbb146105c3578063b1bf962d146105f3578063c4996f511461061157610206565b806395d89b41116100e957806395d89b41146104f9578063a10daee314610517578063a3a7e7f314610533578063a457c2d71461056357610206565b806384d4b410146104715780638b5a6a08146104a15780638da5cb5b146104bd5780638e27d7d7146104db57610206565b80633644e5151161019d5780633eaaf86b1161016c5780633eaaf86b146103cb57806370a08231146103e9578063715018a61461041957806378160376146104235780637ecebe001461044157610206565b80633644e5151461033157806336fed9751461034f5780633769175f1461037f578063395093511461039b57610206565b806323b872dd116101d957806323b872dd146102a757806330adf81f146102d7578063313ce567146102f557806332cb6b0c1461031357610206565b806306fdde031461020b578063095ea7b31461022957806318160ddd146102595780631da24f3e14610277575b600080fd5b6102136106d3565b6040516102209190612933565b60405180910390f35b610243600480360381019061023e91906129fd565b610765565b6040516102509190612a58565b60405180910390f35b610261610857565b60405161026e9190612a82565b60405180910390f35b610291600480360381019061028c9190612a9d565b610861565b60405161029e9190612a82565b60405180910390f35b6102c160048036038101906102bc9190612aca565b6108aa565b6040516102ce9190612a58565b60405180910390f35b6102df610bc8565b6040516102ec9190612b36565b60405180910390f35b6102fd610bec565b60405161030a9190612b6d565b60405180910390f35b61031b610c03565b6040516103289190612a82565b60405180910390f35b610339610c09565b6040516103469190612b36565b60405180910390f35b61036960048036038101906103649190612a9d565b610cae565b6040516103769190612a82565b60405180910390f35b61039960048036038101906103949190612cbd565b610cc6565b005b6103b560048036038101906103b091906129fd565b610f27565b6040516103c29190612a58565b60405180910390f35b6103d361111c565b6040516103e09190612a82565b60405180910390f35b61040360048036038101906103fe9190612a9d565b611122565b6040516104109190612a82565b60405180910390f35b610421611178565b005b61042b611200565b6040516104389190612933565b60405180910390f35b61045b60048036038101906104569190612a9d565b611239565b6040516104689190612a82565b60405180910390f35b61048b60048036038101906104869190612d35565b611282565b6040516104989190612a58565b60405180910390f35b6104bb60048036038101906104b69190612a9d565b611599565b005b6104c5611690565b6040516104d29190612d84565b60405180910390f35b6104e36116ba565b6040516104f09190612d84565b60405180910390f35b6105016116e0565b60405161050e9190612933565b60405180910390f35b610531600480360381019061052c9190612dcb565b611772565b005b61054d60048036038101906105489190612a9d565b611897565b60405161055a9190612a58565b60405180910390f35b61057d600480360381019061057891906129fd565b611aa5565b60405161058a9190612a58565b60405180910390f35b6105ad60048036038101906105a89190612e56565b611caf565b6040516105ba9190612a82565b60405180910390f35b6105dd60048036038101906105d891906129fd565b611e0e565b6040516105ea9190612a58565b60405180910390f35b6105fb612023565b6040516106089190612a82565b60405180910390f35b61061961202d565b6040516106269190612a82565b60405180910390f35b61064960048036038101906106449190612ed5565b612033565b005b61066560048036038101906106609190612d35565b6122d5565b6040516106729190612a82565b60405180910390f35b61068361235c565b6040516106909190612b36565b60405180910390f35b6106b360048036038101906106ae9190612a9d565b612380565b005b6106bd612478565b6040516106ca9190612a82565b60405180910390f35b6060606580546106e290612fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461070e90612fa6565b801561075b5780601f106107305761010080835404028352916020019161075b565b820191906000526020600020905b81548152906001019060200180831161073e57829003601f168201915b5050505050905090565b60008160a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108459190612a82565b60405180910390a36001905092915050565b6000609d54905090565b6000609f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108e757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561092057600080fd5b8260a060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109a89190613007565b60a060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000609e5484610a38919061303b565b905080609f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a859190613007565b609f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b139190613095565b609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610bb39190612a82565b60405180910390a36001925050509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6000606760009054906101000a900460ff16905090565b609c5481565b6000804690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610c386106d3565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001610c929594939291906130eb565b6040516020818303038152906040528051906020012091505090565b609f6020528060005260406000206000915090505481565b600060019054906101000a900460ff1680610cec575060008054906101000a900460ff16155b610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d22906131b0565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d7b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d8361247e565b610d8f83836012611772565b73af298d050e4395d69670b12b7f410000000000006012600a610db29190613303565b6001610dbe919061303b565b610dc8919061303b565b609b819055506fffffffffffffffffffffffffffffffff8016609c819055506000609a60146101000a81548160ff0219169083151502179055506000609a60156101000a81548160ff0219169083151502179055506012600a610e2b9190613303565b6001610e37919061303b565b609d81905550609b54609f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550609d54609b54610e93919061337d565b609e819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef609d54604051610ef99190612a82565b60405180910390a38015610f225760008060016101000a81548160ff0219169083151502179055505b505050565b60008160a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fb19190613095565b60a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161110a9190612a82565b60405180910390a36001905092915050565b609d5481565b6000609e54609f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611171919061337d565b9050919050565b611180612567565b73ffffffffffffffffffffffffffffffffffffffff1661119e611690565b73ffffffffffffffffffffffffffffffffffffffff16146111f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111eb906133fa565b60405180910390fd5b6111fe600061256f565b565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b600060a160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112bf57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112f857600080fd5b6000609f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000609e548261134c919061337d565b90508060a060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113d69190613007565b60a060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905581609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114e49190613095565b609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115849190612a82565b60405180910390a36001935050505092915050565b6115a1612567565b73ffffffffffffffffffffffffffffffffffffffff166115bf611690565b73ffffffffffffffffffffffffffffffffffffffff1614611615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160c906133fa565b60405180910390fd5b80609a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0e6961f1a1afb87eaf51fd64f22ddc10062e23aa7838eac5d0bdf140bfd38972816040516116859190612d84565b60405180910390a150565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060606680546116ef90612fa6565b80601f016020809104026020016040519081016040528092919081815260200182805461171b90612fa6565b80156117685780601f1061173d57610100808354040283529160200191611768565b820191906000526020600020905b81548152906001019060200180831161174b57829003601f168201915b5050505050905090565b600060019054906101000a900460ff1680611798575060008054906101000a900460ff16155b6117d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ce906131b0565b60405180910390fd5b60008060019054906101000a900460ff161590508015611827576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b836065908051906020019061183d9291906127f7565b5082606690805190602001906118549291906127f7565b5081606760006101000a81548160ff021916908360ff16021790555080156118915760008060016101000a81548160ff0219169083151502179055505b50505050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118d457600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561190d57600080fd5b6000609f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000609e5482611961919061337d565b9050609f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905581609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f19190613095565b609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a919190612a82565b60405180910390a360019350505050919050565b60008060a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831015611b40578281611b3b9190613007565b611b43565b60005b60a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560a060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051611c9c9190612a82565b60405180910390a3600191505092915050565b6000609a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d0b57600080fd5b600083148015611d1b5750600082145b15611d6457837f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2609d54604051611d529190612a82565b60405180910390a2609d549050611e07565b6000831115611d865782609d54611d7b9190613095565b609d81905550611d9b565b81609d54611d949190613007565b609d819055505b609c54609d541115611db157609c54609d819055505b609d54609b54611dc1919061337d565b609e81905550837f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2609d54604051611df99190612a82565b60405180910390a2609d5490505b9392505050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e4b57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e8457600080fd5b6000609e5484611e94919061303b565b905080609f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee19190613007565b609f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6f9190613095565b609f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161200f9190612a82565b60405180910390a360019250505092915050565b6000609b54905090565b609e5481565b8342111561204057600080fd5b600060a160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9898989858a6040516020016120c19695949392919061341a565b60405160208183030381529060405280519060200120905060006120e3610c09565b826040516020016120f59291906134f3565b60405160208183030381529060405280519060200120905060018187878760405160008152602001604052604051612130949392919061352a565b6020604051602081039080840390855afa158015612152573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161461219357600080fd5b6001836121a09190613095565b60a160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508760a060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a6040516122c19190612a82565b60405180910390a350505050505050505050565b600060a060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b612388612567565b73ffffffffffffffffffffffffffffffffffffffff166123a6611690565b73ffffffffffffffffffffffffffffffffffffffff16146123fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123f3906133fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561246c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612463906135e1565b60405180910390fd5b6124758161256f565b50565b609b5481565b600060019054906101000a900460ff16806124a4575060008054906101000a900460ff16155b6124e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124da906131b0565b60405180910390fd5b60008060019054906101000a900460ff161590508015612533576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61253b612635565b61254361270e565b80156125645760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff168061265b575060008054906101000a900460ff16155b61269a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612691906131b0565b60405180910390fd5b60008060019054906101000a900460ff1615905080156126ea576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561270b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612734575060008054906101000a900460ff16155b612773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276a906131b0565b60405180910390fd5b60008060019054906101000a900460ff1615905080156127c3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6127d36127ce612567565b61256f565b80156127f45760008060016101000a81548160ff0219169083151502179055505b50565b82805461280390612fa6565b90600052602060002090601f016020900481019282612825576000855561286c565b82601f1061283e57805160ff191683800117855561286c565b8280016001018555821561286c579182015b8281111561286b578251825591602001919060010190612850565b5b509050612879919061287d565b5090565b5b8082111561289657600081600090555060010161287e565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156128d45780820151818401526020810190506128b9565b838111156128e3576000848401525b50505050565b6000601f19601f8301169050919050565b60006129058261289a565b61290f81856128a5565b935061291f8185602086016128b6565b612928816128e9565b840191505092915050565b6000602082019050818103600083015261294d81846128fa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061299482612969565b9050919050565b6129a481612989565b81146129af57600080fd5b50565b6000813590506129c18161299b565b92915050565b6000819050919050565b6129da816129c7565b81146129e557600080fd5b50565b6000813590506129f7816129d1565b92915050565b60008060408385031215612a1457612a1361295f565b5b6000612a22858286016129b2565b9250506020612a33858286016129e8565b9150509250929050565b60008115159050919050565b612a5281612a3d565b82525050565b6000602082019050612a6d6000830184612a49565b92915050565b612a7c816129c7565b82525050565b6000602082019050612a976000830184612a73565b92915050565b600060208284031215612ab357612ab261295f565b5b6000612ac1848285016129b2565b91505092915050565b600080600060608486031215612ae357612ae261295f565b5b6000612af1868287016129b2565b9350506020612b02868287016129b2565b9250506040612b13868287016129e8565b9150509250925092565b6000819050919050565b612b3081612b1d565b82525050565b6000602082019050612b4b6000830184612b27565b92915050565b600060ff82169050919050565b612b6781612b51565b82525050565b6000602082019050612b826000830184612b5e565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612bca826128e9565b810181811067ffffffffffffffff82111715612be957612be8612b92565b5b80604052505050565b6000612bfc612955565b9050612c088282612bc1565b919050565b600067ffffffffffffffff821115612c2857612c27612b92565b5b612c31826128e9565b9050602081019050919050565b82818337600083830152505050565b6000612c60612c5b84612c0d565b612bf2565b905082815260208101848484011115612c7c57612c7b612b8d565b5b612c87848285612c3e565b509392505050565b600082601f830112612ca457612ca3612b88565b5b8135612cb4848260208601612c4d565b91505092915050565b60008060408385031215612cd457612cd361295f565b5b600083013567ffffffffffffffff811115612cf257612cf1612964565b5b612cfe85828601612c8f565b925050602083013567ffffffffffffffff811115612d1f57612d1e612964565b5b612d2b85828601612c8f565b9150509250929050565b60008060408385031215612d4c57612d4b61295f565b5b6000612d5a858286016129b2565b9250506020612d6b858286016129b2565b9150509250929050565b612d7e81612989565b82525050565b6000602082019050612d996000830184612d75565b92915050565b612da881612b51565b8114612db357600080fd5b50565b600081359050612dc581612d9f565b92915050565b600080600060608486031215612de457612de361295f565b5b600084013567ffffffffffffffff811115612e0257612e01612964565b5b612e0e86828701612c8f565b935050602084013567ffffffffffffffff811115612e2f57612e2e612964565b5b612e3b86828701612c8f565b9250506040612e4c86828701612db6565b9150509250925092565b600080600060608486031215612e6f57612e6e61295f565b5b6000612e7d868287016129e8565b9350506020612e8e868287016129e8565b9250506040612e9f868287016129e8565b9150509250925092565b612eb281612b1d565b8114612ebd57600080fd5b50565b600081359050612ecf81612ea9565b92915050565b600080600080600080600060e0888a031215612ef457612ef361295f565b5b6000612f028a828b016129b2565b9750506020612f138a828b016129b2565b9650506040612f248a828b016129e8565b9550506060612f358a828b016129e8565b9450506080612f468a828b01612db6565b93505060a0612f578a828b01612ec0565b92505060c0612f688a828b01612ec0565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612fbe57607f821691505b60208210811415612fd257612fd1612f77565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613012826129c7565b915061301d836129c7565b9250828210156130305761302f612fd8565b5b828203905092915050565b6000613046826129c7565b9150613051836129c7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561308a57613089612fd8565b5b828202905092915050565b60006130a0826129c7565b91506130ab836129c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156130e0576130df612fd8565b5b828201905092915050565b600060a0820190506131006000830188612b27565b61310d6020830187612b27565b61311a6040830186612b27565b6131276060830185612a73565b6131346080830184612d75565b9695505050505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061319a602e836128a5565b91506131a58261313e565b604082019050919050565b600060208201905081810360008301526131c98161318d565b9050919050565b60008160011c9050919050565b6000808291508390505b60018511156132275780860481111561320357613202612fd8565b5b60018516156132125780820291505b8081029050613220856131d0565b94506131e7565b94509492505050565b60008261324057600190506132fc565b8161324e57600090506132fc565b8160018114613264576002811461326e5761329d565b60019150506132fc565b60ff8411156132805761327f612fd8565b5b8360020a91508482111561329757613296612fd8565b5b506132fc565b5060208310610133831016604e8410600b84101617156132d25782820a9050838111156132cd576132cc612fd8565b5b6132fc565b6132df84848460016131dd565b925090508184048111156132f6576132f5612fd8565b5b81810290505b9392505050565b600061330e826129c7565b9150613319836129c7565b92506133467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484613230565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613388826129c7565b9150613393836129c7565b9250826133a3576133a261334e565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006133e46020836128a5565b91506133ef826133ae565b602082019050919050565b60006020820190508181036000830152613413816133d7565b9050919050565b600060c08201905061342f6000830189612b27565b61343c6020830188612d75565b6134496040830187612d75565b6134566060830186612a73565b6134636080830185612a73565b61347060a0830184612a73565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006134bc60028361347b565b91506134c782613486565b600282019050919050565b6000819050919050565b6134ed6134e882612b1d565b6134d2565b82525050565b60006134fe826134af565b915061350a82856134dc565b60208201915061351a82846134dc565b6020820191508190509392505050565b600060808201905061353f6000830187612b27565b61354c6020830186612b5e565b6135596040830185612b27565b6135666060830184612b27565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006135cb6026836128a5565b91506135d68261356f565b604082019050919050565b600060208201905081810360008301526135fa816135be565b905091905056fea26469706673582212208aa440a20e71adf35b835bff187c303178166f2dcffa707d9b9d0c5702ee018964736f6c63430008090033";

type UFragmentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UFragmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UFragments__factory extends ContractFactory {
  constructor(...args: UFragmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UFragments> {
    return super.deploy(overrides || {}) as Promise<UFragments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UFragments {
    return super.attach(address) as UFragments;
  }
  override connect(signer: Signer): UFragments__factory {
    return super.connect(signer) as UFragments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UFragmentsInterface {
    return new utils.Interface(_abi) as UFragmentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UFragments {
    return new Contract(address, _abi, signerOrProvider) as UFragments;
  }
}
