/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleMaster,
  OracleMasterInterface,
} from "../../oracle/OracleMaster";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_relays",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
    ],
    name: "get_live_price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oraclecount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "relay_address",
        type: "address",
      },
    ],
    name: "set_relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100216100cc60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060006002819055506100d4565b600033905090565b6109ff806100e36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b962a0e91161005b578063b962a0e9146100da578063bd960505146100f6578063c054fd5d14610114578063f2fde38b146101445761007d565b80633b794eac14610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c60048036038101906100979190610796565b610160565b6040516100a991906107dc565b60405180910390f35b6100ba6102e8565b005b6100c4610422565b6040516100d19190610806565b60405180910390f35b6100f460048036038101906100ef9190610821565b61044b565b005b6100fe610549565b60405161010b91906107dc565b60405180910390f35b61012e60048036038101906101299190610796565b61054f565b60405161013b9190610806565b60405180910390f35b61015e60048036038101906101599190610796565b610582565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102de576000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663698996f86040518163ffffffff1660e01b815260040160206040518083038186803b15801561029e57600080fd5b505afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d6919061088d565b9150506102e3565b600090505b919050565b6102f061072b565b73ffffffffffffffffffffffffffffffffffffffff1661030e610422565b73ffffffffffffffffffffffffffffffffffffffff1614610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b90610917565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045361072b565b73ffffffffffffffffffffffffffffffffffffffff16610471610422565b73ffffffffffffffffffffffffffffffffffffffff16146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be90610917565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60025481565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61058a61072b565b73ffffffffffffffffffffffffffffffffffffffff166105a8610422565b73ffffffffffffffffffffffffffffffffffffffff16146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610917565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610665906109a9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b61080081610758565b82525050565b600060208201905061081b60008301846107f7565b92915050565b6000806040838503121561083857610837610733565b5b600061084685828601610781565b925050602061085785828601610781565b9150509250929050565b61086a816107c3565b811461087557600080fd5b50565b60008151905061088781610861565b92915050565b6000602082840312156108a3576108a2610733565b5b60006108b184828501610878565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109016020836108ba565b915061090c826108cb565b602082019050919050565b60006020820190508181036000830152610930816108f4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109936026836108ba565b915061099e82610937565b604082019050919050565b600060208201905081810360008301526109c281610986565b905091905056fea26469706673582212206af3bab6c2da90b20d284eb80f95d33e6233b56f15e7ed71bfc9987b6c1c867964736f6c63430008090033";

type OracleMasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleMasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleMaster__factory extends ContractFactory {
  constructor(...args: OracleMasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleMaster> {
    return super.deploy(overrides || {}) as Promise<OracleMaster>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OracleMaster {
    return super.attach(address) as OracleMaster;
  }
  override connect(signer: Signer): OracleMaster__factory {
    return super.connect(signer) as OracleMaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleMasterInterface {
    return new utils.Interface(_abi) as OracleMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleMaster {
    return new Contract(address, _abi, signerOrProvider) as OracleMaster;
  }
}
