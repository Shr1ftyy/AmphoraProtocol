/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3OracleRelay,
  UniswapV3OracleRelayInterface,
} from "../../oracle/UniswapV3OracleRelay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "quote_token_is_token0",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_pool",
    outputs: [
      {
        internalType: "contract IUniswapV3PoolDerivedState",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_quoteTokenIsToken0",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001628380380620016288339818101604052810190620000379190620001a1565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001e8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012c82620000ff565b9050919050565b6200013e816200011f565b81146200014a57600080fd5b50565b6000815190506200015e8162000133565b92915050565b60008115159050919050565b6200017b8162000164565b81146200018757600080fd5b50565b6000815190506200019b8162000170565b92915050565b60008060408385031215620001bb57620001ba620000fa565b5b6000620001cb858286016200014d565b9250506020620001de858286016200018a565b9150509250929050565b61143080620001f86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635541214314610051578063636fc28b1461006f578063698996f81461008d578063bcabc258146100ab575b600080fd5b6100596100c9565b6040516100669190610914565b60405180910390f35b6100776100dc565b60405161008491906109ae565b60405180910390f35b610095610102565b6040516100a291906109e2565b60405180910390f35b6100b3610111565b6040516100c09190610a1e565b60405180910390f35b600060149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061010c610135565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060606000600267ffffffffffffffff81111561015657610155610a39565b5b6040519080825280602002602001820160405280156101845781602001602082028036833780820191505090505b50905060018160008151811061019d5761019c610a68565b5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106101cd576101cc610a68565b5b602002602001019063ffffffff16908163ffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663883bdbfd826040518263ffffffff1660e01b81526004016102429190610b65565b60006040518083038186803b15801561025a57600080fd5b505afa15801561026e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102979190610ded565b50809250506000600190506000836001815181106102b8576102b7610a68565b5b6020026020010151846000815181106102d4576102d3610a68565b5b60200260200101516102e69190610e94565b90506000808260060b1290506000811561030b578261030490610f0f565b905061030f565b8290505b60008463ffffffff16826103239190610f9a565b9050620d89e88166ffffffffffffff1610610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90611028565b60405180910390fd5b6000831561038c578161038590611055565b9050610390565b8190505b780100000000000000000000000000000000000000000000000060026103b58361042d565b73ffffffffffffffffffffffffffffffffffffffff16633b9aca006103da919061109e565b6103e49190611238565b6103ee9190611283565b9850600060149054906101000a900460ff1661042257886ec097ce7bc90715b34b9f100000000061041f9190611283565b98505b505050505050505090565b60008060008360020b12610444578260020b610452565b8260020b610451906112be565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861047e90611055565b60020b8111156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90611353565b60405180910390fd5b6000806001831614156104e7577001000000000000000000000000000000006104f9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506000600283161461053c5760806ffff97272373d413259a46990580e213a82610537919061109e565b901c90505b6000600483161461056a5760806ffff2e50f5f656932ef12357cf3c7fdcc82610565919061109e565b901c90505b600060088316146105985760806fffe5caca7e10e4e61c3624eaa0941cd082610593919061109e565b901c90505b600060108316146105c65760806fffcb9843d60f6159c9db58835c926644826105c1919061109e565b901c90505b600060208316146105f45760806fff973b41fa98c081472e6896dfb254c0826105ef919061109e565b901c90505b600060408316146106225760806fff2ea16466c96a3843ec78b326b528618261061d919061109e565b901c90505b600060808316146106505760806ffe5dee046a99a2a811c461f1969c30538261064b919061109e565b901c90505b600061010083161461067f5760806ffcbe86c7900a88aedcffc83b479aa3a48261067a919061109e565b901c90505b60006102008316146106ae5760806ff987a7253ac413176f2b074cf7815e54826106a9919061109e565b901c90505b60006104008316146106dd5760806ff3392b0822b70005940c7a398e4b70f3826106d8919061109e565b901c90505b600061080083161461070c5760806fe7159475a2c29b7443b29c7fa6e889d982610707919061109e565b901c90505b600061100083161461073b5760806fd097f3bdfd2022b8845ad8f792aa582582610736919061109e565b901c90505b600061200083161461076a5760806fa9f746462d870fdf8a65dc1f90e061e582610765919061109e565b901c90505b60006140008316146107995760806f70d869a156d2a1b890bb3df62baf32f782610794919061109e565b901c90505b60006180008316146107c85760806f31be135f97d08fd981231505542fcfa6826107c3919061109e565b901c90505b6000620100008316146107f85760806f09aa508b5b7a84e1c677de54f3e99bc9826107f3919061109e565b901c90505b6000620200008316146108275760806e5d6af8dedb81196699c329225ee60482610822919061109e565b901c90505b6000620400008316146108555760806d2216e584f5fa1ea926041bedfe9882610850919061109e565b901c90505b6000620800008316146108815760806b048a170391f7dc42444e8fa28261087c919061109e565b901c90505b60008460020b13156108bc57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108b99190611283565b90505b6000640100000000826108cf9190611373565b146108db5760016108de565b60005b60ff16602082901c6108f091906113a4565b92505050919050565b60008115159050919050565b61090e816108f9565b82525050565b60006020820190506109296000830184610905565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061097461096f61096a8461092f565b61094f565b61092f565b9050919050565b600061098682610959565b9050919050565b60006109988261097b565b9050919050565b6109a88161098d565b82525050565b60006020820190506109c3600083018461099f565b92915050565b6000819050919050565b6109dc816109c9565b82525050565b60006020820190506109f760008301846109d3565b92915050565b6000610a088261092f565b9050919050565b610a18816109fd565b82525050565b6000602082019050610a336000830184610a0f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b610adc81610ac3565b82525050565b6000610aee8383610ad3565b60208301905092915050565b6000602082019050919050565b6000610b1282610a97565b610b1c8185610aa2565b9350610b2783610ab3565b8060005b83811015610b58578151610b3f8882610ae2565b9750610b4a83610afa565b925050600181019050610b2b565b5085935050505092915050565b60006020820190508181036000830152610b7f8184610b07565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610bba82610ba0565b810181811067ffffffffffffffff82111715610bd957610bd8610a39565b5b80604052505050565b6000610bec610b87565b9050610bf88282610bb1565b919050565b600067ffffffffffffffff821115610c1857610c17610a39565b5b602082029050602081019050919050565b600080fd5b60008160060b9050919050565b610c4481610c2e565b8114610c4f57600080fd5b50565b600081519050610c6181610c3b565b92915050565b6000610c7a610c7584610bfd565b610be2565b90508083825260208201905060208402830185811115610c9d57610c9c610c29565b5b835b81811015610cc65780610cb28882610c52565b845260208401935050602081019050610c9f565b5050509392505050565b600082601f830112610ce557610ce4610b9b565b5b8151610cf5848260208601610c67565b91505092915050565b600067ffffffffffffffff821115610d1957610d18610a39565b5b602082029050602081019050919050565b610d338161092f565b8114610d3e57600080fd5b50565b600081519050610d5081610d2a565b92915050565b6000610d69610d6484610cfe565b610be2565b90508083825260208201905060208402830185811115610d8c57610d8b610c29565b5b835b81811015610db55780610da18882610d41565b845260208401935050602081019050610d8e565b5050509392505050565b600082601f830112610dd457610dd3610b9b565b5b8151610de4848260208601610d56565b91505092915050565b60008060408385031215610e0457610e03610b91565b5b600083015167ffffffffffffffff811115610e2257610e21610b96565b5b610e2e85828601610cd0565b925050602083015167ffffffffffffffff811115610e4f57610e4e610b96565b5b610e5b85828601610dbf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9f82610c2e565b9150610eaa83610c2e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000001821260008412151615610ee557610ee4610e65565b5b82667fffffffffffff018213600084121615610f0457610f03610e65565b5b828203905092915050565b6000610f1a82610c2e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000821415610f4d57610f4c610e65565b5b816000039050919050565b600066ffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa582610f58565b9150610fb083610f58565b925082610fc057610fbf610f6b565b5b828204905092915050565b600082825260208201905092915050565b7f5469636b2074696d652064696666206661696c00000000000000000000000000600082015250565b6000611012601383610fcb565b915061101d82610fdc565b602082019050919050565b6000602082019050818103600083015261104181611005565b9050919050565b60008160020b9050919050565b600061106082611048565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082141561109357611092610e65565b5b816000039050919050565b60006110a9826109c9565b91506110b4836109c9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110ed576110ec610e65565b5b828202905092915050565b60008160011c9050919050565b6000808291508390505b600185111561114f5780860481111561112b5761112a610e65565b5b600185161561113a5780820291505b8081029050611148856110f8565b945061110f565b94509492505050565b6000826111685760019050611224565b816111765760009050611224565b816001811461118c5760028114611196576111c5565b6001915050611224565b60ff8411156111a8576111a7610e65565b5b8360020a9150848211156111bf576111be610e65565b5b50611224565b5060208310610133831016604e8410600b84101617156111fa5782820a9050838111156111f5576111f4610e65565b5b611224565b6112078484846001611105565b9250905081840481111561121e5761121d610e65565b5b81810290505b9392505050565b600060ff82169050919050565b6000611243826109c9565b915061124e8361122b565b925061127b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611158565b905092915050565b600061128e826109c9565b9150611299836109c9565b9250826112a9576112a8610f6b565b5b828204905092915050565b6000819050919050565b60006112c9826112b4565b91507f80000000000000000000000000000000000000000000000000000000000000008214156112fc576112fb610e65565b5b816000039050919050565b7f5400000000000000000000000000000000000000000000000000000000000000600082015250565b600061133d600183610fcb565b915061134882611307565b602082019050919050565b6000602082019050818103600083015261136c81611330565b9050919050565b600061137e826109c9565b9150611389836109c9565b92508261139957611398610f6b565b5b828206905092915050565b60006113af826109c9565b91506113ba836109c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113ef576113ee610e65565b5b82820190509291505056fea26469706673582212208aa848481859b7717df77598848eba14cf47de3def939aa7eb2bb78a1b296db664736f6c63430008090033";

type UniswapV3OracleRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3OracleRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3OracleRelay__factory extends ContractFactory {
  constructor(...args: UniswapV3OracleRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_address: string,
    quote_token_is_token0: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3OracleRelay> {
    return super.deploy(
      pool_address,
      quote_token_is_token0,
      overrides || {}
    ) as Promise<UniswapV3OracleRelay>;
  }
  override getDeployTransaction(
    pool_address: string,
    quote_token_is_token0: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_address,
      quote_token_is_token0,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3OracleRelay {
    return super.attach(address) as UniswapV3OracleRelay;
  }
  override connect(signer: Signer): UniswapV3OracleRelay__factory {
    return super.connect(signer) as UniswapV3OracleRelay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3OracleRelayInterface {
    return new utils.Interface(_abi) as UniswapV3OracleRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3OracleRelay {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3OracleRelay;
  }
}
